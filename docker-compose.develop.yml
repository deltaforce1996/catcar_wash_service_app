version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: catcar_wash_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: catcar_wash_db
      POSTGRES_USER: catcar_wash_user
      POSTGRES_PASSWORD: catcar_wash_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - catcar_wash_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catcar_wash_user -d catcar_wash_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: catcar_wash_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@catcarwash.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - catcar_wash_network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching (optional but recommended for production apps)
  # redis:
  #   image: redis:7-alpine
  #   container_name: catcar_wash_redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - catcar_wash_network
  #   command: redis-server --appendonly yes

volumes:
  postgres_data:
    driver: local
  # pgadmin_data:
  #   driver: local
  # redis_data:
  #   driver: local

networks:
  catcar_wash_network:
    driver: bridge
